{"version":3,"sources":["components/chartCountry.jsx","components/ChartCountryComponentDeaths.jsx","components/ChartCountryComponentRecovered.jsx","components/Country.jsx","components/chart.jsx","components/Dailycases.jsx","components/logoimage.jpg","components/Home.jsx","components/phone/chart2/chartCountry.jsx","components/phone/chart2/ChartCountryComponentRecovered.jsx","components/phone/chart2/ChartCountryComponentDeaths.jsx","components/phone/Phonecountry.jsx","components/phone/logoimage.jpg","components/phone/about.jsx","components/phone/phonecaseschart.jsx","components/phone/phonedeathchart.jsx","components/phone/phonerecoveredchart.jsx","components/phone/HomePhone.jsx","components/phone/Index.jsx","App.js","reportWebVitals.js","index.js"],"names":["options","global","line","borderColor","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","numeral","value","format","scales","xAxes","type","time","parser","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","ChartCountryComponent","casesType","countryName","useState","setData","useEffect","fetch","then","responce","json","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","buildChartData","timeline","length","datasets","backgroundColor","ChartCountryComponentDeaths","ChartCountryComponentRecovered","Country","props","getData","axios","get","state","country","result","setState","console","log","catch","error","alert","changeCountry","e","target","name","className","Header","as","this","onChange","id","onClick","active","todayCases","deaths","todayDeaths","Component","ChartComponent","a","fetchData","changeCase","todayRecovered","recovered","Home","src","alt","title","logoimage","href","PhoneCountry","PhoneCases","PhoneDeath","Phonerecovered","HomePhone","Index","to","path","App","Screenwidth","window","screen","availWidth","Dailycases","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a192812b.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Line } from \"react-chartjs-2\"\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport numeral from 'numeral'\r\nimport './chartCountrystyle.css'\r\n\r\nconst options = {\r\n    global: {\r\n        line: {\r\n            borderColor: '#F85F73',\r\n        },\r\n    },\r\n    legend: {\r\n        display: false,\r\n    },\r\n    elements: {\r\n        point: {\r\n            radius: 0,\r\n        },\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n        mode: \"index\",\r\n        intersect: false,\r\n        callbacks: {\r\n            label: function (tooltipItem, data) {\r\n                return numeral(tooltipItem.value).format(\"+0,0\");\r\n            },\r\n        },\r\n    },\r\n\r\n    scales: {\r\n        xAxes: [\r\n            {\r\n                type: \"time\",\r\n                time: {\r\n                    parser: \"MM/DD/YY\",\r\n                    tooltipFormat: \"ll\",\r\n                },\r\n            },\r\n        ],\r\n        yAxes: [\r\n            {\r\n                gridLines: {\r\n                    display: false,\r\n                },\r\n                ticks: {\r\n                    callback: function (value, index, values) {\r\n                        return numeral(value).format(\"0a\");\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nconst buildChartData = (data, casesType = \"cases\") => {\r\n    const chartData = [];\r\n    let lastDataPoint;\r\n\r\n    for (let date in data.cases) {\r\n\r\n        if (lastDataPoint) {\r\n            const newDataPoint = {\r\n                x: date,\r\n                y: data[casesType][date] - lastDataPoint\r\n            }\r\n            chartData.push(newDataPoint);\r\n        }\r\n        lastDataPoint = data[casesType][date];\r\n\r\n    }\r\n    return chartData;\r\n};\r\n\r\nfunction ChartCountryComponent({ casesType, countryName }) {\r\n    const [data, setData] = useState({});\r\n    useEffect(() => {\r\n        const fetchData = () => {\r\n            fetch(`https://disease.sh/v3/covid-19/historical/${countryName}?lastdays=100`)\r\n                .then(responce => responce.json())\r\n                .then(data => {\r\n                    const { timeline } = data\r\n                    const chartData = buildChartData(timeline, casesType);\r\n                    setData(chartData);\r\n                })\r\n        }\r\n        fetchData();\r\n    }, [casesType, countryName])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                data?.length > 0 && (\r\n                    <Line\r\n                        options={options}\r\n                        data={{\r\n                            datasets: [\r\n                                {\r\n                                    data: data,\r\n                                    backgroundColor: \"#d2b21694\",\r\n                                    borderColor: \"#ff9800\"\r\n                                }\r\n                            ]\r\n                        }} />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartCountryComponent","import React from 'react'\r\nimport { Line } from \"react-chartjs-2\"\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport numeral from 'numeral'\r\nimport './chartCountrystyle.css'\r\n\r\nconst options = {\r\n    global: {\r\n        line: {\r\n            borderColor: '#F85F73',\r\n        },\r\n    },\r\n    legend: {\r\n        display: false,\r\n    },\r\n    elements: {\r\n        point: {\r\n            radius: 0,\r\n        },\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n        mode: \"index\",\r\n        intersect: false,\r\n        callbacks: {\r\n            label: function (tooltipItem, data) {\r\n                return numeral(tooltipItem.value).format(\"+0,0\");\r\n            },\r\n        },\r\n    },\r\n\r\n    scales: {\r\n        xAxes: [\r\n            {\r\n                type: \"time\",\r\n                time: {\r\n                    parser: \"MM/DD/YY\",\r\n                    tooltipFormat: \"ll\",\r\n                },\r\n            },\r\n        ],\r\n        yAxes: [\r\n            {\r\n                gridLines: {\r\n                    display: false,\r\n                },\r\n                ticks: {\r\n                    // Include a dollar sign in the ticks\r\n                    callback: function (value, index, values) {\r\n                        return numeral(value).format(\"0a\");\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nconst buildChartData = (data, casesType = \"cases\") => {\r\n    const chartData = [];\r\n    let lastDataPoint;\r\n\r\n    for (let date in data.cases) {\r\n\r\n        if (lastDataPoint) {\r\n            const newDataPoint = {\r\n                x: date,\r\n                y: data[casesType][date] - lastDataPoint\r\n            }\r\n            chartData.push(newDataPoint);\r\n        }\r\n        lastDataPoint = data[casesType][date];\r\n\r\n    }\r\n    return chartData;\r\n};\r\n\r\nfunction ChartCountryComponentDeaths({ casesType, countryName }) {\r\n    const [data, setData] = useState({});\r\n    useEffect(() => {\r\n        const fetchData = () => {\r\n            fetch(`https://disease.sh/v3/covid-19/historical/${countryName}?lastdays=100`)\r\n                .then(responce => responce.json())\r\n                .then(data => {\r\n                    const { timeline } = data\r\n                    const chartData = buildChartData(timeline, casesType);\r\n                    setData(chartData);\r\n                })\r\n        }\r\n        fetchData();\r\n    }, [casesType, countryName])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                data?.length > 0 && (\r\n                    <Line\r\n                        options={options}\r\n                        data={{\r\n                            datasets: [\r\n                                {\r\n                                    data: data,\r\n                                    backgroundColor: \"#e3feb9\",\r\n                                    borderColor: \"#0a6b35\"\r\n                                }\r\n                            ]\r\n                        }} />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartCountryComponentDeaths","import React from 'react'\r\nimport { Line } from \"react-chartjs-2\"\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport numeral from 'numeral'\r\nimport './chartCountrystyle.css'\r\n\r\nconst options = {\r\n    global: {\r\n        line: {\r\n            borderColor: '#F85F73',\r\n        },\r\n    },\r\n    legend: {\r\n        display: false,\r\n    },\r\n    elements: {\r\n        point: {\r\n            radius: 0,\r\n        },\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n        mode: \"index\",\r\n        intersect: false,\r\n        callbacks: {\r\n            label: function (tooltipItem, data) {\r\n                return numeral(tooltipItem.value).format(\"+0,0\");\r\n            },\r\n        },\r\n    },\r\n\r\n    scales: {\r\n        xAxes: [\r\n            {\r\n                type: \"time\",\r\n                time: {\r\n                    parser: \"MM/DD/YY\",\r\n                    tooltipFormat: \"ll\",\r\n                },\r\n            },\r\n        ],\r\n        yAxes: [\r\n            {\r\n                gridLines: {\r\n                    display: false,\r\n                },\r\n                ticks: {\r\n                    // Include a dollar sign in the ticks\r\n                    callback: function (value, index, values) {\r\n                        return numeral(value).format(\"0a\");\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nconst buildChartData = (data, casesType = \"cases\") => {\r\n    const chartData = [];\r\n    let lastDataPoint;\r\n\r\n    for (let date in data.cases) {\r\n\r\n        if (lastDataPoint) {\r\n            const newDataPoint = {\r\n                x: date,\r\n                y: data[casesType][date] - lastDataPoint\r\n            }\r\n            chartData.push(newDataPoint);\r\n        }\r\n        lastDataPoint = data[casesType][date];\r\n\r\n    }\r\n    return chartData;\r\n};\r\n\r\nfunction ChartCountryComponentRecovered({ casesType, countryName }) {\r\n    const [data, setData] = useState({});\r\n    // const [countrydata, setCountrydata] = useState(countryName);\r\n    useEffect(() => {\r\n        const fetchData = () => {\r\n            fetch(`https://disease.sh/v3/covid-19/historical/${countryName}?lastdays=100`)\r\n                .then(responce => responce.json())\r\n                .then(data => {\r\n                    const { timeline } = data\r\n                    const chartData = buildChartData(timeline, casesType);\r\n                    setData(chartData);\r\n                })\r\n        }\r\n        fetchData();\r\n    }, [casesType, countryName])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                data?.length > 0 && (\r\n                    <Line\r\n                        options={options}\r\n                        data={{\r\n                            datasets: [\r\n                                {\r\n                                    data: data,\r\n                                    backgroundColor: \"#f5c6fc\",\r\n                                    borderColor: \"#930ba7\"\r\n                                }\r\n                            ]\r\n                        }} />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartCountryComponentRecovered","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport './style.css'\r\nimport { Header } from 'semantic-ui-react'\r\nimport ChartCountryComponent from './chartCountry'\r\nimport ChartCountryComponentDeaths from './ChartCountryComponentDeaths'\r\nimport ChartCountryComponentRecovered from './ChartCountryComponentRecovered'\r\n\r\nclass Country extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            country: '',\r\n            countryName: 'India',\r\n            casesType: 'cases',\r\n        }\r\n    }\r\n\r\n    getData = () => {\r\n        axios.get(`https://disease.sh/v3/covid-19/countries/${this.state.country}`).then(result => {\r\n            const data = result.data\r\n            this.setState({\r\n                data\r\n            }, () => {\r\n                this.setState({ countryName: this.state.country }, () => { console.log(this.state.countryName) })\r\n            })\r\n        })\r\n            .catch(error => {\r\n                alert(\"Enter a Valid Country Name\")\r\n                this.setState({\r\n                    country: ''\r\n                })\r\n            })\r\n    }\r\n\r\n    changeCountry = (e) => {\r\n        this.setState({\r\n            [e.target.name]: [e.target.value]\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"countryComponent\">\r\n                <div className=\"country-conatiner\">\r\n                    <div className=\"search-container\">\r\n                        <Header as='h2'>Type Country Name</Header>\r\n                        <input className=\"search-textbox\" value={this.state.country} onChange={this.changeCountry} type=\"text\" name=\"country\" id=\"\" />\r\n                        <div className=\"button-values\">\r\n                            <button className=\"search-button\" onClick={this.getData} >\r\n                                Search\r\n                        </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"country-details\">\r\n                        <div className=\"active-cases\">\r\n                            Active Cases: {this.state.data.active}\r\n                        </div>\r\n                        <div className=\"today-cases\">\r\n                            Today's Cases: {this.state.data.todayCases}\r\n                        </div>\r\n                        <div className=\"death-cases\">\r\n                            Death: {this.state.data.deaths}\r\n                        </div>\r\n                        <div className=\"today-death-cases\">\r\n                            Today Deaths: {this.state.data.todayDeaths}\r\n                        </div>\r\n                        <div className=\"country-name\">\r\n                            {this.state.data.country}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mapschange\">\r\n                    <h2>Cases</h2>\r\n                    <ChartCountryComponent casesType='cases' countryName={this.state.countryName} />\r\n                    <div className=\"countryNameComponent\">\r\n                        <h2>Country: {this.state.countryName}</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mapdata\">\r\n                    <div className=\"deaths\">\r\n                        <h2>Death</h2>\r\n                        <ChartCountryComponentDeaths casesType='deaths' countryName={this.state.countryName} />\r\n                    </div>\r\n                    <div className=\"Recovered\">\r\n                        <h2>Recovered</h2>\r\n                        <ChartCountryComponentRecovered casesType='recovered' countryName={this.state.countryName} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Country;\r\n\r\n","import React from 'react'\r\nimport { Line } from \"react-chartjs-2\"\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport numeral from 'numeral'\r\nimport './style.css'\r\n\r\nconst options = {\r\n    global: {\r\n        line: {\r\n            borderColor: '#F85F73',\r\n        },\r\n    },\r\n    legend: {\r\n        display: false,\r\n    },\r\n    elements: {\r\n        point: {\r\n            radius: 2,\r\n        },\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n        mode: \"index\",\r\n        intersect: false,\r\n        callbacks: {\r\n            label: function (tooltipItem, data) {\r\n                return numeral(tooltipItem.value).format(\"+0,0\");\r\n            },\r\n        },\r\n    },\r\n\r\n    scales: {\r\n        xAxes: [\r\n            {\r\n                type: \"time\",\r\n                time: {\r\n                    parser: \"MM/DD/YY\",\r\n                    tooltipFormat: \"ll\",\r\n                },\r\n            },\r\n        ],\r\n        yAxes: [\r\n            {\r\n                gridLines: {\r\n                    display: false,\r\n                },\r\n                ticks: {\r\n                    // Include a dollar sign in the ticks\r\n                    callback: function (value, index, values) {\r\n                        return numeral(value).format(\"0a\");\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nconst buildChartData = (data, casesType = \"cases\") => {\r\n    const chartData = [];\r\n    let lastDataPoint;\r\n\r\n    for (let date in data.cases) {\r\n\r\n        if (lastDataPoint) {\r\n            const newDataPoint = {\r\n                x: date,\r\n                y: data[casesType][date] - lastDataPoint\r\n            }\r\n            chartData.push(newDataPoint);\r\n        }\r\n        lastDataPoint = data[casesType][date];\r\n\r\n    }\r\n    return chartData;\r\n};\r\n\r\nfunction ChartComponent({ casesType }) {\r\n    const [data, setData] = useState({});\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n                .then(responce => responce.json())\r\n                .then(data => {\r\n                    const chartData = buildChartData(data, casesType);\r\n                    setData(chartData);\r\n                })\r\n        }\r\n        fetchData();\r\n    }, [casesType])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                data?.length > 0 && (\r\n                    <Line\r\n                        options={options}\r\n                        data={{\r\n                            datasets: [\r\n                                {\r\n                                    data: data,\r\n                                    backgroundColor: \"#d2b21694\",\r\n                                    borderColor: \"#ff9800\"\r\n                                }\r\n                            ]\r\n                        }} />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartComponent","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport './dailycasescomponent.css'\r\nimport ChartComponent from './chart'\r\n\r\n\r\nclass Country extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            country: '',\r\n            casesType: 'cases',\r\n        }\r\n    }\r\n\r\n    getData = () => {\r\n        axios.get(`https://disease.sh/v3/covid-19/all/`).then(result => {\r\n            const data = result.data\r\n            this.setState({\r\n                data\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    }\r\n\r\n    changeCase = (e) => {\r\n        this.setState({\r\n            casesType: [e.target.name]\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"daily-cases-component\">\r\n                <div className=\"daily-cases-conatiner\">\r\n                    <div className=\"activecases\">\r\n                        <h2>Total Confrimed  Cases</h2>\r\n                        <div className=\"casesupdateTab\">\r\n                            <p className=\"noneupdate\">+{this.state.data.todayCases}</p>\r\n                            <h3 className=\"activeCases1\">{this.state.data.cases}</h3>\r\n                        </div>\r\n                        <div >\r\n                            <button className=\"showMaps1\" type=\"submit\"></button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"confrimed\">\r\n                        <h2>Active Cases </h2>\r\n                        <div className=\"casesupdateTab\">\r\n                            <p className=\"liveUpdate\">+{this.state.data.todayCases}</p>\r\n                            <h3 className=\"activeCases\">{this.state.data.active}</h3>\r\n                        </div>\r\n                        <div >\r\n                            <button className=\"showMaps\" name=\"cases\" onClick={this.changeCase} type=\"submit\">Show Chart Data</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"deathcases\">\r\n                        <h2>Death Cases</h2>\r\n                        <div className=\"casesupdateTab\">\r\n                            <p className=\"liveUpdate\">+{this.state.data.todayDeaths}</p>\r\n                            <h3 className=\"activeCases\">{this.state.data.deaths}</h3>\r\n                        </div>\r\n                        <div >\r\n                            <button className=\"showMaps\" name=\"recovered\" onClick={this.changeCase} type=\"submit\">Show Chart Data</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"recovered\">\r\n                        <h2>Recovered Cases</h2>\r\n                        <div className=\"casesupdateTab\">\r\n                            <p className=\"liveUpdate\">+{this.state.data.todayRecovered}</p>\r\n                            <h3 className=\"activeCases\">{this.state.data.recovered}</h3>\r\n                        </div>\r\n                        <div >\r\n                            <button className=\"showMaps\" name=\"deaths\" onClick={this.changeCase} type=\"submit\">Show Chart Data</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mapschange\">\r\n                    <ChartComponent casesType={this.state.casesType} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Country;\r\n\r\n","export default __webpack_public_path__ + \"static/media/logoimage.5a0189a8.jpg\";","import React, { Component } from 'react'\r\nimport './Homecss.css'\r\nimport logoimage from './logoimage.jpg'\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"tab1\">\r\n                    <div className=\"Home\">\r\n                        <div className=\"appinfo\">\r\n                            <h1 className=\"Apptitle\">COVID-19 Tracker App</h1>\r\n                            <p className=\"content\">This app is used to track corona virus of worldwide or specific countries. <br />\r\n                    By using the statictical data we can analyze the historical data with the graphical view for the past 100 days\r\n                    </p>\r\n                        </div>\r\n\r\n                        <div className=\"logo-container\">\r\n                            <img className=\"logo\" src=\"https://www.world-heart-federation.org/wp-content/uploads/WEB-_PREVENT-_MEDICAL_650.gif\" alt=\"none\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"avideo\">\r\n                        {/* https://covid19.info.gov.pg/wp-content/uploads/2020/03/WHO-English.mp4 */}\r\n                        <iframe className=\"awarnessVideo\" src=\"https://covid19.info.gov.pg/wp-content/uploads/2020/03/WHO-English.mp4\" title=\"Awarness Video\"></iframe>\r\n                        <h2>AwarnessVideo</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"div\">\r\n                    <img className=\"image\" src={logoimage} alt=\"Logo\" />\r\n                    <div className=\"authorinfromation\">\r\n                        <div className=\"companyname\">\r\n                            <p>Company</p><h1>ABIPRAVI</h1>\r\n                        </div>\r\n                        <div className=\"authordetails\">\r\n                            <p>This Website was Created By Praveen Kumar</p>\r\n                            <p className=\"sdata-corona\">This Website will be helpfull to track corona's Statistical data from past 100days.</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"headermedia\">\r\n                        <h1>Follow Us on</h1>\r\n                        <div className=\"socialmedia\">\r\n                            <a href=\"https://www.instagram.com/praveenkumar_abipravi/\">Instagram</a>\r\n                            <a href=\"https://github.com/pravee42\">Github</a>\r\n                            <a href=\"https://www.youtube.com/channel/UCTMAfI1rkf94YQGNmZwFT7Q\">Youtube</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react'\r\nimport { Line } from \"react-chartjs-2\"\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport numeral from 'numeral'\r\n\r\nconst options = {\r\n    global: {\r\n        line: {\r\n            borderColor: '#F85F73',\r\n        },\r\n    },\r\n    legend: {\r\n        display: false,\r\n    },\r\n    elements: {\r\n        point: {\r\n            radius: 0,\r\n        },\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n        mode: \"index\",\r\n        intersect: false,\r\n        callbacks: {\r\n            label: function (tooltipItem, data) {\r\n                return numeral(tooltipItem.value).format(\"+0,0\");\r\n            },\r\n        },\r\n    },\r\n\r\n    scales: {\r\n        xAxes: [\r\n            {\r\n                type: \"time\",\r\n                time: {\r\n                    parser: \"MM/DD/YY\",\r\n                    tooltipFormat: \"ll\",\r\n                },\r\n            },\r\n        ],\r\n        yAxes: [\r\n            {\r\n                gridLines: {\r\n                    display: false,\r\n                },\r\n                ticks: {\r\n                    callback: function (value, index, values) {\r\n                        return numeral(value).format(\"0a\");\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nconst buildChartData = (data, casesType = \"cases\") => {\r\n    const chartData = [];\r\n    let lastDataPoint;\r\n\r\n    for (let date in data.cases) {\r\n\r\n        if (lastDataPoint) {\r\n            const newDataPoint = {\r\n                x: date,\r\n                y: data[casesType][date] - lastDataPoint\r\n            }\r\n            chartData.push(newDataPoint);\r\n        }\r\n        lastDataPoint = data[casesType][date];\r\n\r\n    }\r\n    return chartData;\r\n};\r\n\r\nfunction ChartCountryComponent({ casesType, countryName }) {\r\n    const [data, setData] = useState({});\r\n    useEffect(() => {\r\n        const fetchData = () => {\r\n            fetch(`https://disease.sh/v3/covid-19/historical/${countryName}?lastdays=30`)\r\n                .then(responce => responce.json())\r\n                .then(data => {\r\n                    const { timeline } = data\r\n                    const chartData = buildChartData(timeline, casesType);\r\n                    setData(chartData);\r\n                })\r\n        }\r\n        fetchData();\r\n    }, [casesType, countryName])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                data?.length > 0 && (\r\n                    <Line\r\n                        options={options}\r\n                        data={{\r\n                            datasets: [\r\n                                {\r\n                                    data: data,\r\n                                    backgroundColor: \"#d2b21694\",\r\n                                    borderColor: \"#ff9800\"\r\n                                }\r\n                            ]\r\n                        }} />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartCountryComponent","import React from 'react'\r\nimport { Line } from \"react-chartjs-2\"\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport numeral from 'numeral'\r\n\r\nconst options = {\r\n    global: {\r\n        line: {\r\n            borderColor: '#F85F73',\r\n        },\r\n    },\r\n    legend: {\r\n        display: false,\r\n    },\r\n    elements: {\r\n        point: {\r\n            radius: 0,\r\n        },\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n        mode: \"index\",\r\n        intersect: false,\r\n        callbacks: {\r\n            label: function (tooltipItem, data) {\r\n                return numeral(tooltipItem.value).format(\"+0,0\");\r\n            },\r\n        },\r\n    },\r\n\r\n    scales: {\r\n        xAxes: [\r\n            {\r\n                type: \"time\",\r\n                time: {\r\n                    parser: \"MM/DD/YY\",\r\n                    tooltipFormat: \"ll\",\r\n                },\r\n            },\r\n        ],\r\n        yAxes: [\r\n            {\r\n                gridLines: {\r\n                    display: false,\r\n                },\r\n                ticks: {\r\n                    // Include a dollar sign in the ticks\r\n                    callback: function (value, index, values) {\r\n                        return numeral(value).format(\"0a\");\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nconst buildChartData = (data, casesType = \"cases\") => {\r\n    const chartData = [];\r\n    let lastDataPoint;\r\n\r\n    for (let date in data.cases) {\r\n\r\n        if (lastDataPoint) {\r\n            const newDataPoint = {\r\n                x: date,\r\n                y: data[casesType][date] - lastDataPoint\r\n            }\r\n            chartData.push(newDataPoint);\r\n        }\r\n        lastDataPoint = data[casesType][date];\r\n\r\n    }\r\n    return chartData;\r\n};\r\n\r\nfunction ChartCountryComponentRecovered({ casesType, countryName }) {\r\n    const [data, setData] = useState({});\r\n    useEffect(() => {\r\n        const fetchData = () => {\r\n            fetch(`https://disease.sh/v3/covid-19/historical/${countryName}?lastdays=30`)\r\n                .then(responce => responce.json())\r\n                .then(data => {\r\n                    const { timeline } = data\r\n                    const chartData = buildChartData(timeline, casesType);\r\n                    setData(chartData);\r\n                })\r\n        }\r\n        fetchData();\r\n    }, [casesType, countryName])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                data?.length > 0 && (\r\n                    <Line\r\n                        options={options}\r\n                        data={{\r\n                            datasets: [\r\n                                {\r\n                                    data: data,\r\n                                    backgroundColor: \"#f5c6fc\",\r\n                                    borderColor: \"#930ba7\"\r\n                                }\r\n                            ]\r\n                        }} />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartCountryComponentRecovered","import React from 'react'\r\nimport { Line } from \"react-chartjs-2\"\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport numeral from 'numeral'\r\n\r\nconst options = {\r\n    global: {\r\n        line: {\r\n            borderColor: '#F85F73',\r\n        },\r\n    },\r\n    legend: {\r\n        display: false,\r\n    },\r\n    elements: {\r\n        point: {\r\n            radius: 0,\r\n        },\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n        mode: \"index\",\r\n        intersect: false,\r\n        callbacks: {\r\n            label: function (tooltipItem, data) {\r\n                return numeral(tooltipItem.value).format(\"+0,0\");\r\n            },\r\n        },\r\n    },\r\n\r\n    scales: {\r\n        xAxes: [\r\n            {\r\n                type: \"time\",\r\n                time: {\r\n                    parser: \"MM/DD/YY\",\r\n                    tooltipFormat: \"ll\",\r\n                },\r\n            },\r\n        ],\r\n        yAxes: [\r\n            {\r\n                gridLines: {\r\n                    display: false,\r\n                },\r\n                ticks: {\r\n                    // Include a dollar sign in the ticks\r\n                    callback: function (value, index, values) {\r\n                        return numeral(value).format(\"0a\");\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nconst buildChartData = (data, casesType = \"cases\") => {\r\n    const chartData = [];\r\n    let lastDataPoint;\r\n\r\n    for (let date in data.cases) {\r\n\r\n        if (lastDataPoint) {\r\n            const newDataPoint = {\r\n                x: date,\r\n                y: data[casesType][date] - lastDataPoint\r\n            }\r\n            chartData.push(newDataPoint);\r\n        }\r\n        lastDataPoint = data[casesType][date];\r\n\r\n    }\r\n    return chartData;\r\n};\r\n\r\nfunction ChartCountryComponentDeaths({ casesType, countryName }) {\r\n    const [data, setData] = useState({});\r\n    useEffect(() => {\r\n        const fetchData = () => {\r\n            fetch(`https://disease.sh/v3/covid-19/historical/${countryName}?lastdays=30`)\r\n                .then(responce => responce.json())\r\n                .then(data => {\r\n                    const { timeline } = data\r\n                    const chartData = buildChartData(timeline, casesType);\r\n                    setData(chartData);\r\n                })\r\n        }\r\n        fetchData();\r\n    }, [casesType, countryName])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                data?.length > 0 && (\r\n                    <Line\r\n                        options={options}\r\n                        data={{\r\n                            datasets: [\r\n                                {\r\n                                    data: data,\r\n                                    backgroundColor: \"#e3feb9\",\r\n                                    borderColor: \"#0a6b35\"\r\n                                }\r\n                            ]\r\n                        }} />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartCountryComponentDeaths","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport './phone-style.css'\r\nimport { Header } from 'semantic-ui-react'\r\nimport ChartCountryComponent from './chart2/chartCountry'\r\nimport ChartCountryComponentRecovered from './chart2/ChartCountryComponentRecovered'\r\nimport ChartCountryComponentDeaths from './chart2/ChartCountryComponentDeaths'\r\n\r\nclass PhoneCountry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            country: '',\r\n            countryName: 'India',\r\n        }\r\n    }\r\n\r\n    getData = () => {\r\n        axios.get(`https://disease.sh/v3/covid-19/countries/${this.state.country}`).then(result => {\r\n            const data = result.data\r\n            this.setState({\r\n                data\r\n            }, () => {\r\n                this.setState({ countryName: this.state.country }, () => { console.log(this.state.countryName) })\r\n            })\r\n        })\r\n            .catch(error => {\r\n                alert(\"Enter a Valid Country Name\")\r\n                this.setState({\r\n                    country: ''\r\n                })\r\n            })\r\n    }\r\n\r\n\r\n    changeCountry = (e) => {\r\n        this.setState({\r\n            [e.target.name]: [e.target.value]\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"phonecountryComponent\">\r\n                <div className=\"phonecountry-conatiner\">\r\n                    <div className=\"phonesearch-container\">\r\n                        <Header as='h2'>Type Country Name</Header>\r\n                        <input className=\"phonesearch-textbox\" value={this.state.country} onChange={this.changeCountry} type=\"text\" name=\"country\" id=\"\" />\r\n                        <div className=\"phonebutton-values\">\r\n                            <button className=\"phonesearch-button\" onClick={this.getData} >\r\n                                Search\r\n                        </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"phonecountry-details\">\r\n                        <div className=\"phonecases\">\r\n                            Active Cases: {this.state.data.active}\r\n                        </div>\r\n                        <div className=\"phonecases\">\r\n                            Today's Cases: {this.state.data.todayCases}\r\n                        </div>\r\n                        <div className=\"phonecases\">\r\n                            Death: {this.state.data.deaths}\r\n                        </div>\r\n                        <div className=\"phonecases\">\r\n                            Today Deaths: {this.state.data.todayDeaths}\r\n                        </div>\r\n                        <div className=\"phonecountry-name\">\r\n                            {this.state.data.country}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"phonemapdata\">\r\n                    <div className=\"phonecountryNameComponent\">\r\n                        <h2>Country: {this.state.countryName}</h2>\r\n                    </div>\r\n                    <div className=\"phonecases11\">\r\n                        <h2>Cases</h2>\r\n                        <ChartCountryComponent casesType=\"cases\" countryName={this.state.countryName} />\r\n                    </div>\r\n                    <div className=\"phonedeaths\">\r\n                        <h2>Death</h2>\r\n                        <ChartCountryComponentDeaths casesType=\"deaths\" countryName={this.state.countryName} />\r\n                    </div>\r\n                    <div className=\"phoneRecovered\">\r\n                        <h2>Recovered</h2>\r\n                        <ChartCountryComponentRecovered casesType=\"recovered\" countryName={this.state.countryName} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PhoneCountry;\r\n\r\n","export default __webpack_public_path__ + \"static/media/logoimage.5a0189a8.jpg\";","import React, { Component } from 'react'\r\nimport './homePhone.css'\r\nimport logoimage from './logoimage.jpg'\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"phone-phone-tab1\">\r\n                    <div className=\"phone-phone-Home\">\r\n                        <div className=\"phone-phone-appinfo\">\r\n                            <h1 className=\"phone-phone-Apptitle\">COVID-19 Tracker App</h1>\r\n                            <p className=\"phone-phone-content\">This app is used to track corona virus of worldwide or specific countries. <br />\r\n                    By using the statictical data we can analyze the historical data with the graphical view for the past 30 days\r\n                    </p>\r\n                        </div>\r\n\r\n                        <div className=\"phone-phone-logo-container\">\r\n                            <img className=\"phone-phone-logo\" src=\"https://www.world-heart-federation.org/wp-content/uploads/WEB-_PREVENT-_MEDICAL_650.gif\" alt=\"none\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"phone-phone-avideo\">\r\n                        {/* https://covid19.info.gov.pg/wp-content/uploads/2020/03/WHO-English.mp4 */}\r\n                        <iframe className=\"phone-phone-awarnessVideo\" src=\"https://covid19.info.gov.pg/wp-content/uploads/2020/03/WHO-English.mp4\" title=\"Awarness Video\"></iframe>\r\n                        <h2>AwarnessVideo</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"phone-phone-div\">\r\n                    <img className=\"phone-phone-image\" src={logoimage} alt=\"Logo\" />\r\n                    <div className=\"phone-phone-authorinfromation\">\r\n                        <div className=\"phone-phone-companyname\">\r\n                            <p>Company</p><h1>ABIPRAVI</h1>\r\n                        </div>\r\n                        <div className=\"phone-phone-authordetails\">\r\n                            <p>This Website was Created By Praveen Kumar</p>\r\n                            <p className=\"phone-phone-sdata-corona\">This Website will be helpfull to track corona's Statistical data from past 1 month.</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"phone-phone-headermedia\">\r\n                        <h1>Follow Us on</h1>\r\n                        <div className=\"phone-phone-socialmedia\">\r\n                            <a href=\"https://www.instagram.com/praveenkumar_abipravi/\">Instagram</a>\r\n                            <a href=\"https://github.com/pravee42\">Github</a>\r\n                            <a href=\"https://www.youtube.com/channel/UCTMAfI1rkf94YQGNmZwFT7Q\">Youtube</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react'\r\nimport { Line } from \"react-chartjs-2\"\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport numeral from 'numeral'\r\n\r\nconst options = {\r\n    global: {\r\n        line: {\r\n            borderColor: '#F85F73',\r\n        },\r\n    },\r\n    legend: {\r\n        display: false,\r\n    },\r\n    elements: {\r\n        point: {\r\n            radius: 2,\r\n        },\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n        mode: \"index\",\r\n        intersect: false,\r\n        callbacks: {\r\n            label: function (tooltipItem, data) {\r\n                return numeral(tooltipItem.value).format(\"+0,0\");\r\n            },\r\n        },\r\n    },\r\n\r\n    scales: {\r\n        xAxes: [\r\n            {\r\n                type: \"time\",\r\n                time: {\r\n                    parser: \"MM/DD/YY\",\r\n                    tooltipFormat: \"ll\",\r\n                },\r\n            },\r\n        ],\r\n        yAxes: [\r\n            {\r\n                gridLines: {\r\n                    display: false,\r\n                },\r\n                ticks: {\r\n                    // Include a dollar sign in the ticks\r\n                    callback: function (value, index, values) {\r\n                        return numeral(value).format(\"0a\");\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nconst buildChartData = (data, casesType = \"cases\") => {\r\n    const chartData = [];\r\n    let lastDataPoint;\r\n\r\n    for (let date in data.cases) {\r\n\r\n        if (lastDataPoint) {\r\n            const newDataPoint = {\r\n                x: date,\r\n                y: data[casesType][date] - lastDataPoint\r\n            }\r\n            chartData.push(newDataPoint);\r\n        }\r\n        lastDataPoint = data[casesType][date];\r\n\r\n    }\r\n    return chartData;\r\n};\r\n\r\nfunction PhoneCases({ casesType }) {\r\n    const [data, setData] = useState({});\r\n    useEffect(() => {\r\n        const fetchData = () => {\r\n            fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=30\")\r\n                .then(responce => responce.json())\r\n                .then(data => {\r\n                    const chartData = buildChartData(data, casesType);\r\n                    setData(chartData);\r\n                })\r\n        }\r\n        fetchData();\r\n    }, [casesType])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                data?.length > 0 && (\r\n                    <Line\r\n                        options={options}\r\n                        data={{\r\n                            datasets: [\r\n                                {\r\n                                    data: data,\r\n                                    backgroundColor: \"#c5e1a4\",\r\n                                    borderColor: \"#376204\"\r\n                                }\r\n                            ]\r\n                        }} />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PhoneCases","import React from 'react'\r\nimport { Bar } from \"react-chartjs-2\"\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport numeral from 'numeral'\r\n\r\nconst options = {\r\n    global: {\r\n        line: {\r\n            borderColor: '#702573',\r\n        },\r\n    },\r\n    legend: {\r\n        display: false,\r\n    },\r\n    elements: {\r\n        point: {\r\n            radius: 2,\r\n        },\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n        mode: \"index\",\r\n        intersect: false,\r\n        callbacks: {\r\n            label: function (tooltipItem, data) {\r\n                return numeral(tooltipItem.value).format(\"+0,0\");\r\n            },\r\n        },\r\n    },\r\n\r\n    scales: {\r\n        xAxes: [\r\n            {\r\n                type: \"time\",\r\n                time: {\r\n                    parser: \"MM/DD/YY\",\r\n                    tooltipFormat: \"ll\",\r\n                },\r\n            },\r\n        ],\r\n        yAxes: [\r\n            {\r\n                gridLines: {\r\n                    display: false,\r\n                },\r\n                ticks: {\r\n                    // Include a dollar sign in the ticks\r\n                    callback: function (value, index, values) {\r\n                        return numeral(value).format(\"0a\");\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nconst buildChartData = (data, casesType = \"cases\") => {\r\n    const chartData = [];\r\n    let lastDataPoint;\r\n\r\n    for (let date in data.cases) {\r\n\r\n        if (lastDataPoint) {\r\n            const newDataPoint = {\r\n                x: date,\r\n                y: data[casesType][date] - lastDataPoint\r\n            }\r\n            chartData.push(newDataPoint);\r\n        }\r\n        lastDataPoint = data[casesType][date];\r\n\r\n    }\r\n    return chartData;\r\n};\r\n\r\nfunction PhoneDeath({ casesType }) {\r\n    const [data, setData] = useState({});\r\n    useEffect(() => {\r\n        const fetchData = () => {\r\n            fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=30\")\r\n                .then(responce => responce.json())\r\n                .then(data => {\r\n                    const chartData = buildChartData(data, casesType);\r\n                    setData(chartData);\r\n                })\r\n        }\r\n        fetchData();\r\n    }, [casesType])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                data?.length > 0 && (\r\n                    <Bar\r\n                        options={options}\r\n                        data={{\r\n                            datasets: [\r\n                                {\r\n                                    data: data,\r\n                                    backgroundColor: \"#fab2cb\",\r\n                                    borderColor: \"#702573\"\r\n                                }\r\n                            ]\r\n                        }} />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PhoneDeath","import React from 'react'\r\nimport { Line } from \"react-chartjs-2\"\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport numeral from 'numeral'\r\n\r\nconst options = {\r\n    global: {\r\n        line: {\r\n            borderColor: '#702573',\r\n        },\r\n    },\r\n    legend: {\r\n        display: false,\r\n    },\r\n    elements: {\r\n        point: {\r\n            radius: 2,\r\n        },\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n        mode: \"index\",\r\n        intersect: false,\r\n        callbacks: {\r\n            label: function (tooltipItem, data) {\r\n                return numeral(tooltipItem.value).format(\"+0,0\");\r\n            },\r\n        },\r\n    },\r\n\r\n    scales: {\r\n        xAxes: [\r\n            {\r\n                type: \"time\",\r\n                time: {\r\n                    parser: \"MM/DD/YY\",\r\n                    tooltipFormat: \"ll\",\r\n                },\r\n            },\r\n        ],\r\n        yAxes: [\r\n            {\r\n                gridLines: {\r\n                    display: false,\r\n                },\r\n                ticks: {\r\n                    // Include a dollar sign in the ticks\r\n                    callback: function (value, index, values) {\r\n                        return numeral(value).format(\"0a\");\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nconst buildChartData = (data, casesType = \"cases\") => {\r\n    const chartData = [];\r\n    let lastDataPoint;\r\n\r\n    for (let date in data.cases) {\r\n\r\n        if (lastDataPoint) {\r\n            const newDataPoint = {\r\n                x: date,\r\n                y: data[casesType][date] - lastDataPoint\r\n            }\r\n            chartData.push(newDataPoint);\r\n        }\r\n        lastDataPoint = data[casesType][date];\r\n\r\n    }\r\n    return chartData;\r\n};\r\n\r\nfunction Phonerecovered({ casesType }) {\r\n    const [data, setData] = useState({});\r\n    useEffect(() => {\r\n        const fetchData = () => {\r\n            fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=30\")\r\n                .then(responce => responce.json())\r\n                .then(data => {\r\n                    const chartData = buildChartData(data, casesType);\r\n                    setData(chartData);\r\n                })\r\n        }\r\n        fetchData();\r\n    }, [casesType])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                data?.length > 0 && (\r\n                    <Line\r\n                        options={options}\r\n                        data={{\r\n                            datasets: [\r\n                                {\r\n                                    data: data,\r\n                                    backgroundColor: \"#d37f65\",\r\n                                    borderColor: \"#f73b00\"\r\n                                }\r\n                            ]\r\n                        }} />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Phonerecovered","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport './Phonestyle.css';\r\nimport PhoneCases from './phonecaseschart';\r\nimport PhoneDeath from './phonedeathchart';\r\nimport Phonerecovered from './phonerecoveredchart';\r\n\r\n\r\nclass HomePhone extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n        }\r\n    }\r\n\r\n    getData = () => {\r\n        axios.get(`https://disease.sh/v3/covid-19/all/`).then(result => {\r\n            const data = result.data\r\n            this.setState({\r\n                data\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"HomePageContainer\">\r\n                <h1 className=\"title\">Covid Tracker</h1>\r\n                <div className=\"HomePageContainer-1\">\r\n                    <div className=\"phone-cases\">\r\n                        <p className=\"title-cases\">Cases</p>\r\n                        <p className=\"count\">{this.state.data.cases}</p>\r\n                    </div>\r\n                    <div className=\"phone-active\">\r\n                        <p className=\"title-cases\">Active Cases</p>\r\n                        <p className=\"phone-liveUpdate\">+{this.state.data.todayCases}</p>\r\n                        <h3 className=\"phone-activeCases\">{this.state.data.active}</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"HomePageContainer-2\">\r\n                    <div className=\"phone-recovered\">\r\n                        <p className=\"title-cases\">Recovered Cases</p>\r\n                        <p className=\"phone-rectoday\">+{this.state.data.todayRecovered}</p>\r\n                        <h3 className=\"phone-rec\">{this.state.data.recovered}</h3>\r\n                    </div>\r\n                    <div className=\"phone-deaths\">\r\n                        <p className=\"title-cases\">Deaths Cases</p><br></br>\r\n                        <p className=\"phone-detoday\">+{this.state.data.todayRecovered}</p>\r\n                        <h3 className=\"phone-death\">{this.state.data.recovered}</h3>\r\n                    </div>\r\n                </div>\r\n                <hr className=\"phone-divider\" />\r\n                <div className=\"phone-chartdata\">\r\n                    <div className=\"phone-caseschart\">\r\n                        <h1>Cases Data</h1>\r\n                        <PhoneCases casesType=\"cases\" />\r\n                    </div>\r\n                    <div className=\"phone-deathschart\">\r\n                        <h1>Deaths Data</h1>\r\n                        <PhoneDeath casesType=\"deaths\" />\r\n                    </div>\r\n                    <div className=\"phone-recoveredchart\">\r\n                        <h1>Recovered</h1>\r\n                        <Phonerecovered casesType=\"deaths\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePhone;","import React from 'react'\r\nimport './indexstyle.css'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport PhoneCountry from './Phonecountry';\r\nimport About from './about';\r\nimport HomePhone from './HomePhone';\r\n\r\nexport default function Index() {\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <div>\r\n                    <div className=\"phone-navbar\">\r\n                        <nav>\r\n                            <ul>\r\n                                <li>\r\n                                    <Link className=\"td\" to=\"/\">Home</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link className=\"td\" to=\"/country\">Search By Country</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link className=\"td\" to=\"/about\">About</Link>\r\n                                </li>\r\n                            </ul>\r\n                        </nav>\r\n                    </div>\r\n                    <div className=\"main-body\">\r\n                        <Switch >\r\n                            <Route path=\"/country\">\r\n                                <PhoneCountry />\r\n                            </Route>\r\n                            <Route path=\"/about\">\r\n                                <About />\r\n                            </Route>\r\n                            <Route path=\"/\">\r\n                                <HomePhone />\r\n                            </Route>\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Country from './components/Country';\nimport Dailycases from './components/Dailycases';\nimport Home from './components/Home';\nimport Index from './components/phone/Index'\n\nfunction App() { \n  const Screenwidth = window.screen.availWidth\n  return (\n    <div className=\"App\">\n      <Router>\n      {\n          Screenwidth > 993 ? (\n            <div>\n            <div className=\"navbar\">\n            <nav>\n              <ul>\n                <li>\n                  <Link className=\"td\" to=\"/\">Home</Link>\n                </li>\n                <li>\n                  <Link className=\"td\" to=\"/country\">Search By Country</Link>\n                </li>\n                <li>\n                  <Link className=\"td\" to=\"/dailycases\">Daily Cases</Link>\n                </li>\n              </ul>\n            </nav>\n          </div>\n            <div className=\"main-body\">\n            <Switch >\n              <Route path=\"/country\">\n                <Country />\n              </Route>\n              <Route path=\"/dailycases\">\n                <Dailycases />\n              </Route>\n              <Route path=\"/\">\n                <Home />\n              </Route>\n            </Switch>\n          </div>\n          </div>\n          ) : (\n          <Index />\n          )\n        }\n      </Router>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}